[
  // Quick open
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen",
    "when": "!inQuickOpen && !sideBarFocus && !suggestWidgetVisible && vim.mode !== 'Insert'"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.showCommands",
    "when": "!inQuickOpen && vim.mode !== 'Insert'"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },

  // Editing
    // Completion
  {
    "key": "tab",
    "command": "-insertNextSuggestion"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation"
  },
  {
    "key": "shift+tab",
    "command": "-insertPrevSuggestion"
  },
  {
    "key": "ctrl+e",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "resourceExtname =~ /\\.(j|t)sx?/"
  },
  {
    "key": "ctrl+[",
    "command": "closeParameterHints",
    "when": "parameterHintsVisible"
  },
    // Definitions
  {
    "key": "ctrl+[",
    "command": "closeReferenceSearchEditor",
    "when": "referenceSearchVisible"
  },

  // Windows
  {
    "key": "ctrl+6",
    "command": "workbench.action.openPreviousEditorFromHistory",
    "when": "editorFocus && vim.mode == 'Normal'"
  },

  // Sidebar
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "sideBarFocus && listFocus && !inputFocus"
  },
  {
    "key": "x",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "sideBarFocus && !explorerViewletFocus"
  },
    // Files explorer
  {
    "key": "space .",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletFocus"
  },
  {
    "key": "space .",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "editorFocus && explorerViewletVisible && vim.mode == 'Normal'"
  },
  {
    "key": "space .",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "!sideBarFocus && !editorFocus && !inQuickOpen && !terminalFocus && !inKeybindings && vim.mode != 'Insert'"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },

  // Search in file
  {
    "key": "ctrl+n",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+i",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+e",
    "command": "toggleFindWholeWord",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+r",
    "command": "toggleFindRegex",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+[",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
    // Replace
  {
    "key": "ctrl+s",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "enter",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },

  // Panel
  {
    "key": "ctrl+[",
    "command": "workbench.action.closePanel",
    "when": "panelFocus"
  },
    // Terminal
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.terminal.new",
    "when": "!editorIsOpen && !sideBarFocus && !inQuickOpen && !terminalFocus"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.terminal.new",
    "when": "editorFocus && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "!editorIsOpen && !sideBarFocus && !inQuickOpen && !terminalFocus"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "editorFocus && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.togglePanel",
    "when": "editorFocus && terminalIsOpen && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus && editorIsOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus && terminalIsOpen && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "!editorIsOpen && !sideBarFocus && !inQuickOpen && terminalIsOpen"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.action.terminal.splitInActiveWorkspace",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },

  // Other
  {
    "key": "ctrl+shift+[",
    "command": "notifications.clearAll",
    "when": "notificationToastsVisible && editorFocus && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+shift+[",
    "command": "notifications.clearAll",
    "when": "!editorIsOpen && !sideBarFocus && !inQuickOpen && !terminalFocus"
  }
]
