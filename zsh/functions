# vim: set ft=zsh :
# Create directory and cd into it
function mk() {
    mkdir -p "$1" && cd "$1"
}

# Simple python server
function serve() {
    local port=${1:-8000}
    python -m SimpleHTTPServer $port
}

# Get user's ssh public key
function ssh-key() {
    if [[ ! -f $HOME/.ssh/id_rsa.pub ]]; then
        echo "This user hasn't got a unique public SSH key"
        return 1
    fi

    # pbcopy must a command (OS X) or an alias to something like xsel/xclip
    cat $HOME/.ssh/id_rsa.pub | pbcopy
    echo "SSH key's been copied to clipboard!"
}

# Get rbenv repo if not done yet
function rbenv-install() {
    if [[ -d $HOME/.rbenv ]] && command -v rbenv > /dev/null 2>&1; then
        echo "rbenv seems to be already installed in this system"
        return 1
    else
        # Check whether installing on Linux or OS X
        if [[ `uname` == "Darwin" ]]; then
            # TODO
        else    # Asume git is installed
            echo "Fetching rbenv..."
            git clone https://github.com/sstephenson/rbenv.git ~/.rbenv

            echo "Fetching ruby-build..."
            git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

            # Set PATH properly
            export PATH="$HOME/.rbenv/bin:$PATH"
            eval "$(rbenv init -)"
        fi
    fi
}

# Update rbenv and ruby-build via git
function rbenv-update() {
    # Check whether updating on OS X or Linux
    if [[ `uname` == "Darwin" ]]; then
        # TODO
    else
        if [[ -d $HOME/.rbenv ]]; then
            cd $HOME/.rbenv
            git rev-parse --is-inside-work-tree > /dev/null 2>&1 && \
                echo "Updating rbenv..." && git pull
            cd $HOME
        else
            echo "rbenv is not installed!"
            return 1
        fi

        if [[ -d $HOME/.rbenv/plugins/ruby-build ]]; then
            cd $HOME/.rbenv/plugins/ruby-build
            git rev-parse --is-inside-work-tree > /dev/null 2>&1 && \
                echo "Updating ruby-build..." && git pull
            cd $HOME
        else
            echo "ruby-build is not installed!"
            return 1
        fi
    fi
}

# Delete rbenv
function rbenv-delete() {
    # Check whether deleting on OS X or Linux
    if [[ `uname` == "Darwin" ]]; then
        # TODO
    else
        if [[ -d $HOME/.rbenv ]]; then
            rm -rf $HOME/.rbenv
        else
            echo "rbenv is not installed!"
            return 1
        fi
    fi
}
